digraph structs {
node [shape=record];
struct_inputs_workflow [shape=record, label="{INPUT: | <input_data> input_data} | inputs_workflow | {OUTPUT: | <inputLandmarksEMSP> inputLandmarksEMSP | <inputVolume> inputVolume}"];
struct_processing_node:input_data -> struct_inputs_workflow:input_data;
struct_processing_node [color=red, label="{WORKFLOW INPUT: | {<input_data> input_data}}"];
struct_processing_node_out [color=red, label="{WORKFLOW OUTPUT: | {<out> out}}"];
struct_antsRegistration_workflow3:all_ -> struct_processing_node_out:out;
struct_bcd_workflow1 [shape=record, label="{INPUT: | <inputLandmarksEMSP> inputLandmarksEMSP | <inputVolume> inputVolume} | bcd_workflow1 | {OUTPUT: | <outputLandmarksInACPCAlignedSpace> outputLandmarksInACPCAlignedSpace | <outputLandmarksInInputSpace> outputLandmarksInInputSpace | <outputResampledVolume> outputResampledVolume}"];
struct_inputs_workflow:inputVolume -> struct_bcd_workflow1:inputVolume;
struct_inputs_workflow:inputLandmarksEMSP -> struct_bcd_workflow1:inputLandmarksEMSP;
struct_roi_workflow1 [shape=record, label="{INPUT: | <inputVolume> inputVolume} | roi_workflow1 | {OUTPUT: | <outputVolume> outputVolume}"];
struct_bcd_workflow1:outputResampledVolume -> struct_roi_workflow1:inputVolume;
struct_landmarkInitializer_workflow1 [shape=record, label="{INPUT: | <inputMovingLandmarkFilename> inputMovingLandmarkFilename} | landmarkInitializer_workflow1 | {OUTPUT: | <outputTransformFilename> outputTransformFilename}"];
struct_bcd_workflow1:outputLandmarksInInputSpace -> struct_landmarkInitializer_workflow1:inputMovingLandmarkFilename;
struct_landmarkInitializer_workflow2 [shape=record, label="{INPUT: | <inputFixedLandmarkFilename> inputFixedLandmarkFilename} | landmarkInitializer_workflow2 | {OUTPUT: | <outputTransformFilename> outputTransformFilename}"];
struct_bcd_workflow1:outputLandmarksInACPCAlignedSpace -> struct_landmarkInitializer_workflow2:inputFixedLandmarkFilename;
struct_resample_workflow1 [shape=record, label="{INPUT: | <inputVolume> inputVolume | <warpTransform> warpTransform} | resample_workflow1 | {OUTPUT:}"];
struct_inputs_workflow:inputVolume -> struct_resample_workflow1:inputVolume;
struct_landmarkInitializer_workflow1:outputTransformFilename -> struct_resample_workflow1:warpTransform;
struct_roi_workflow2 [shape=record, label="{INPUT: | <inputVolume> inputVolume} | roi_workflow2 | {OUTPUT: | <outputROIMaskVolume> outputROIMaskVolume}"];
struct_roi_workflow1:outputVolume -> struct_roi_workflow2:inputVolume;
struct_antsRegistration_workflow1 [shape=record, label="{INPUT: | <fixed_image> fixed_image | <fixed_image_masks> fixed_image_masks | <initial_moving_transform> initial_moving_transform} | antsRegistration_workflow1 | {OUTPUT: | <composite_transform> composite_transform}"];
struct_roi_workflow1:outputVolume -> struct_antsRegistration_workflow1:fixed_image;
struct_roi_workflow2:outputROIMaskVolume -> struct_antsRegistration_workflow1:fixed_image_masks;
struct_landmarkInitializer_workflow2:outputTransformFilename -> struct_antsRegistration_workflow1:initial_moving_transform;
struct_antsRegistration_workflow2 [shape=record, label="{INPUT: | <fixed_image> fixed_image | <fixed_image_masks> fixed_image_masks | <initial_moving_transform> initial_moving_transform} | antsRegistration_workflow2 | {OUTPUT: | <save_state> save_state}"];
struct_roi_workflow1:outputVolume -> struct_antsRegistration_workflow2:fixed_image;
struct_roi_workflow2:outputROIMaskVolume -> struct_antsRegistration_workflow2:fixed_image_masks;
struct_antsRegistration_workflow1:composite_transform -> struct_antsRegistration_workflow2:initial_moving_transform;
struct_abc_workflow1 [shape=record, label="{INPUT: | <inputT1> inputT1 | <inputVolumes> inputVolumes | <restoreState> restoreState} | abc_workflow1 | {OUTPUT: | <atlasToSubjectTransform> atlasToSubjectTransform | <posteriors> posteriors | <t1_average> t1_average}"];
struct_roi_workflow1:outputVolume -> struct_abc_workflow1:inputVolumes;
struct_inputs_workflow:inputVolume -> struct_abc_workflow1:inputT1;
struct_antsRegistration_workflow2:save_state -> struct_abc_workflow1:restoreState;
struct_resample_workflow2 [shape=record, label="{INPUT: | <referenceVolume> referenceVolume | <warpTransform> warpTransform} | resample_workflow2 | {OUTPUT:}"];
struct_abc_workflow1:t1_average -> struct_resample_workflow2:referenceVolume;
struct_abc_workflow1:atlasToSubjectTransform -> struct_resample_workflow2:warpTransform;
struct_resample_workflow3 [shape=record, label="{INPUT: | <referenceVolume> referenceVolume | <warpTransform> warpTransform} | resample_workflow3 | {OUTPUT:}"];
struct_abc_workflow1:t1_average -> struct_resample_workflow3:referenceVolume;
struct_abc_workflow1:atlasToSubjectTransform -> struct_resample_workflow3:warpTransform;
struct_resample_workflow4 [shape=record, label="{INPUT: | <referenceVolume> referenceVolume | <warpTransform> warpTransform} | resample_workflow4 | {OUTPUT:}"];
struct_abc_workflow1:t1_average -> struct_resample_workflow4:referenceVolume;
struct_abc_workflow1:atlasToSubjectTransform -> struct_resample_workflow4:warpTransform;
struct_resample_workflow5 [shape=record, label="{INPUT: | <referenceVolume> referenceVolume | <warpTransform> warpTransform} | resample_workflow5 | {OUTPUT:}"];
struct_abc_workflow1:t1_average -> struct_resample_workflow5:referenceVolume;
struct_abc_workflow1:atlasToSubjectTransform -> struct_resample_workflow5:warpTransform;
struct_resample_workflow6 [shape=record, label="{INPUT: | <referenceVolume> referenceVolume | <warpTransform> warpTransform} | resample_workflow6 | {OUTPUT:}"];
struct_abc_workflow1:t1_average -> struct_resample_workflow6:referenceVolume;
struct_abc_workflow1:atlasToSubjectTransform -> struct_resample_workflow6:warpTransform;
struct_resample_workflow7 [shape=record, label="{INPUT: | <referenceVolume> referenceVolume | <warpTransform> warpTransform} | resample_workflow7 | {OUTPUT:}"];
struct_abc_workflow1:t1_average -> struct_resample_workflow7:referenceVolume;
struct_abc_workflow1:atlasToSubjectTransform -> struct_resample_workflow7:warpTransform;
struct_resample_workflow8 [shape=record, label="{INPUT: | <referenceVolume> referenceVolume | <warpTransform> warpTransform} | resample_workflow8 | {OUTPUT:}"];
struct_abc_workflow1:t1_average -> struct_resample_workflow8:referenceVolume;
struct_abc_workflow1:atlasToSubjectTransform -> struct_resample_workflow8:warpTransform;
struct_createLabelMapFromProbabilityMaps_workflow1 [shape=record, label="{INPUT: | <inputProbabilityVolume> inputProbabilityVolume | <nonAirRegionMask> nonAirRegionMask} | createLabelMapFromProbabilityMaps_workflow1 | {OUTPUT:}"];
struct_abc_workflow1:posteriors -> struct_createLabelMapFromProbabilityMaps_workflow1:inputProbabilityVolume;
struct_roi_workflow2:outputROIMaskVolume -> struct_createLabelMapFromProbabilityMaps_workflow1:nonAirRegionMask;
struct_landmarkInitializer_workflow3 [shape=record, label="{INPUT: | <inputFixedLandmarkFilename> inputFixedLandmarkFilename} | landmarkInitializer_workflow3 | {OUTPUT: | <atlas_id> atlas_id | <outputTransformFilename> outputTransformFilename}"];
struct_bcd_workflow1:outputLandmarksInACPCAlignedSpace -> struct_landmarkInitializer_workflow3:inputFixedLandmarkFilename;
struct_roi_workflow3 [shape=record, label="{INPUT: | <inputVolume> inputVolume} | roi_workflow3 | {OUTPUT: | <outputROIMaskVolume> outputROIMaskVolume}"];
struct_abc_workflow1:t1_average -> struct_roi_workflow3:inputVolume;
struct_antsRegistration_workflow3 [shape=record, label="{INPUT: | <atlas_id> atlas_id | <fixed_image> fixed_image | <fixed_image_masks> fixed_image_masks | <initial_moving_transform> initial_moving_transform} | antsRegistration_workflow3 | {OUTPUT: | <all_> all_}"];
struct_abc_workflow1:t1_average -> struct_antsRegistration_workflow3:fixed_image;
struct_roi_workflow3:outputROIMaskVolume -> struct_antsRegistration_workflow3:fixed_image_masks;
struct_landmarkInitializer_workflow3:outputTransformFilename -> struct_antsRegistration_workflow3:initial_moving_transform;
struct_landmarkInitializer_workflow3:atlas_id -> struct_antsRegistration_workflow3:atlas_id;
}